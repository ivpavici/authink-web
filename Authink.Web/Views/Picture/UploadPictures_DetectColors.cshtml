@using Combres.Mvc
@model Authink.Web.Models.Picture.UploadPictures_DetectColorsModel
@using resources = Resources.TaskWizard

@{
    ViewBag.Title = "AuThink task wizard | Upload pictures";
}


    @Url.CombresLink("taskWizzardCss")
    @Url.CombresLink("spectrumCss")
 
    @Url.CombresLink("spectrumJs")

    <script type="text/javascript">
        $(function () {
            $(".colorPickerHolder").each(function () {
                var colorPicker = $(this),
                    colorInput  = $(this).parent().find(".colorValueHolder");
                    
                colorPicker.spectrum({
                    showPalette: true,
                    showPaletteOnly:true,
                    palette: [
                        ['black', 'white', 'blue','red'],
                        ['green', 'yellow','orange']
                    ],
                    change: function (color) {
                        $(colorInput).val(color.toHexString());
                        console.log(color);
                    }
                });
    
                colorInput.val(colorPicker.val());
               
            });
            
        });
    </script>

<div class="task-wizard-container">
    <div class="task-wizard-title clearfix">
        <h1>@resources.UploadPictures_Title</h1>
        @Html.RouteLink(resources.Omnibar_Cancel, "Cancel", null, new { @class = "task-wizard-cancel" })
        <div class="task-wizard-progress">@resources.Omnibar_Step <span>3</span>/5</div>
    </div>

    @if(!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="task-wizard-error">
            <span>@Model.ErrorMessage</span>
        </div>
    }

    <div class="task-wizard-content">    
        <div class="task-wizard-upload-container" class="clearfix">
            @using (Html.BeginForm("UploadPictures_DetectColors", "Picture", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="task-wizard-upload-info">
                    <span>@resources.UploadPictures_Colors_Info</span>
                </div>
                <div class="task-wizard-upload-items">
                    @for (var i = 0; i < Model.NumberOfPicturesAndWrongColorsMapping.NumberOfPictures; i++)
                    {
                        <div class="task-wizard-upload-item">
                            <div class="task-wizard-upload-item-filepicker">
                                <input type="file" name="pictures"/>
                            </div>
                            <div class="task-wizard-upload-item-color">
                                <span>@resources.UploadPictures_Colors_CorrectColor</span>
                                @Html.HiddenFor(m=>m.Colors[i].CorrectColor, new{@class="colorValueHolder"})
                                <input type='color' name='color' class="colorPickerHolder"/>
                            </div>
                            <div class="task-wizard-upload-item-color">
                                <span>@resources.UploadPictures_Colors_IncorrectColors</span>
                                @for (var j = 0; j < Model.NumberOfPicturesAndWrongColorsMapping.NumberOfWrongColorsPerPicture; j++)
                                {
                                    <div class="task-wizard-upload-item-color">
                                     @Html.HiddenFor(m => m.Colors[i].WrongColors[j], new { @class = "colorValueHolder" })
                                     <input type='color' name='color' class="colorPickerHolder"/>
                                     </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                <div class="task-wizard-upload-options clearfix">
                    <input type="submit" class="task-wizard-upload-save" name="Submit" value="@resources.UploadPictures_Upload" />
                </div>
            }
        </div>
    </div>
</div>